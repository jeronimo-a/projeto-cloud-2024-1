# versão padrão dos templates CloudFormation
AWSTemplateFormatVersion: "2010-09-09"

# descrição da stack, para fins de documentação
# todas as descrições estão em inglês porque o site da AWS mostra as descrições em ASCII
# consequentemente dá problema com acentos
Description: >
  This stack is a wordpress website setup with MySQL and auto-scaling.

# recursos a serem criados
Resources:

  # define a nuvem privada virtual
  ProjectVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [Network, VPC, Cidr]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: Project's VPC

# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%% CONFIGURAÇÕES DE REDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  
  # define uma subrede dentro da VPC
  ProjectSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ProjectVPC
      AvailabilityZone: us-east-1a
      CidrBlock: !FindInMap [Network, MainSubnet, Cidr]  # vem do mapping
      MapPublicIpOnLaunch: true
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: Project's Main Subnet

  # define uma subrede de redundância para a base de dados
  DatabaseRedundancySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ProjectVPC
      AvailabilityZone: us-east-1b  # availability zone diferente da sub-rede padrão
      CidrBlock: !FindInMap [Network, DatabaseRedundancySubnet, Cidr]  # vem do mapping
      MapPublicIpOnLaunch: true
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: Project's Database Redundancy Subnet

  # define o gateway de internet da VPC
  ProjectInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: Project's VPC Internet Gateway

  # conecta o gateway de internet definido acima ao VPC
  ProjectVCPGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref ProjectVPC
      InternetGatewayId: !Ref ProjectInternetGateway

  # route table da VPC, contém regras para transmissão de dados
  ProjectRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref ProjectVPC
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: Project's Route Table

  # route da VPC, é uma das regras contidas na route table (a única, neste caso)
  ProjectRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref ProjectRouteTable
      DestinationCidrBlock: '0.0.0.0/0'       # libera tráfego para qualquer lugar
      GatewayId: !Ref ProjectInternetGateway

  # associa a route table criada à subnet
  ProjectSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref ProjectSubnet
      RouteTableId: !Ref ProjectRouteTable

# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%% KEY PAIR E SECURITY GROUPS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  # define o keypair de acesso às instâncias EC2
  ProjectKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: admin-keypair
      PublicKeyMaterial: !Ref KeyPairPublicKey
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: Project's Overall Key Pair

  # security group para acesso MySQL
  MySQLSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: MySQL server security group, enables MySQL only.
      VpcId: !Ref ProjectVPC
      SecurityGroupIngress:
        - IpProtocol: tcp           # libera acesso MySQL
          FromPort: 3306
          ToPort: 3306
          CidrIp: !FindInMap [Network, VPC, Cidr] # apenas de dentro da VPC
      Tags:                                       # tags para fácil identificação
        - Key: Name
          Value: MySQL Security Group

  # security group para servidores web
  WebserverSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Wordpress server security group, enables HTTP and HTTPS.
      VpcId: !Ref ProjectVPC
      SecurityGroupIngress:
        - IpProtocol: tcp     # libera acesso HTTP
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp     # libera acesso HTTPS
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: Webserver Security Group

  # security group para acesso SSH
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH server security group, enables SSH only.
      VpcId: !Ref ProjectVPC
      SecurityGroupIngress:
        - IpProtocol: tcp     # libera acesso SSH
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: SSH Security Group

# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%% BASE DE DADOS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  # subnets das bases de dados
  ProjectDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Subnet group for Aurora MySQL"
      SubnetIds:
        - !Ref ProjectSubnet              # sub-rede padrão
        - !Ref DatabaseRedundancySubnet   # sub-rede extra em outra availability zone para redundância
      Tags:                 # tags para melhor identificação
        - Key: Name
          Value: Database Subnet Group

  # base de dados MySQL
  # não usei DynamoDB porque o Wordpress não funciona de cara com DynamoDB
  # só descobri isso depois que configurei o wordpress, assim, teria que refazer um monte de coisas
  ProjectDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Ref ProjectDBInstanceIdentifier            # identificador da instância
      DBInstanceClass: db.t3.micro                                      # não tem como ser maior que isso
      Engine: mysql                                                     # usar o MySQL
      EngineVersion: 8.0                                                # MySQL 8.0
      MasterUsername: !FindInMap [Wordpress, Database, Username]        # usuário mestre
      MasterUserPassword: !FindInMap [Wordpress, Database, Password]    # senha do usuário mestre
      DBName: !FindInMap [Wordpress, Database, Name]                    # base de dados para o wordpress
      AllocatedStorage: 20
      BackupRetentionPeriod: 7
      PreferredBackupWindow: "07:00-09:00"
      PreferredMaintenanceWindow: "Mon:01:00-Mon:03:00"
      VPCSecurityGroups:
        - !Ref MySQLSecurityGroup                       # permite acesso MySQL somente de dentro da VPC
      DBSubnetGroupName: !Ref ProjectDBSubnetGroup      # grupo de subnets nas quais incluir a base de dados
      PubliclyAccessible: true

# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%% CRIAÇÃO DA IMAGEM WEBSERVER %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  # receita de criação da imagem do webserver, que será usada no autoscaling group
  #WebserverImageRecipe:
  #  Type: AWS::ImageBuilder::ImageRecipe
  #  Properties: 
  #    Name: webserver-image-recipe                          # nome da receita da imagem
  #    Version: 1.0.0                                        # versão da imagem
  #    ParentImage: ami-04b70fa74e45c3917                    # imagem original, Ubuntu 24.04 x86-64
  #    Components:                                           # componentes de criação da imagem, apenas um
  #      - ComponentArn: !GetAtt WebserverImageComponent.Arn # script de instalação e configuração do wordpress
  
  # componente da receita de criação da imagem do webserver, instala e configura o wordpress
  WebserverImageComponent:
    Type: AWS::ImageBuilder::Component
    Properties: 
      Name: webserver-image-component   # nome do componente da receita
      Version: 1.0.0                    # versão do componente da receita
      Platform: Linux                   # somente para linux
      Data: |
        name: HelloWorldTestingLinuxDoc - InlineData
        description: This is hello world testing doc
        schemaVersion: 1.0

        phases:
          - name: build
            steps:
              - name: HelloWorldStep
                action: ExecuteBash
                inputs:
                  commands:
                    - echo "Hello World! Build." > /home/ubuntu/teste.txt
          - name: validate
            steps:
              - name: HelloWorldStep
                action: ExecuteBash
                inputs:
                  commands:
                    - echo "Hello World! Validate." >> /home/ubuntu/teste.txt
          - name: test
            steps:
              - name: HelloWorldStep
                action: ExecuteBash
                inputs:
                  commands:
                    - echo "Hello World! Test." >> /home/ubuntu/teste.txt

# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%% PARÂMETROS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

# parâmetros de criação da stack
Parameters:

  # chave pública para acesso SSH às instâncias
  KeyPairPublicKey:
    Description: Public key for the EC2 instances' key pair.
    Type: String
    ConstraintDescription: Must be an SSH RSA public key.
    Default: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzDZEYWYF/G7qHlgvj0OyTuX4vIn+7zoembaKryWM8wwwUxM5nfl5Ny/AqRp3IZb+Xe+vnrnBwfVSNo3igbpagF2Xq8SvGqltmroEy8J3M0xsTlAGjVGjpKv4Z13mUny+Uj2xK+Rs8mU25uFA0U44iWE+UsFAxbHtsTVyWaQxFZnjpCn0dIwPkyjJEZ2wVZJyF7P0WmSNR6yV0RQJmvBU1i/20DYQRSyc28fmeJRsQmAj5533hCEMw2d5mTG6Xr7xO68CIk1K0yoENO2VRpPfbW5f3QG6hSN1mbmUgjG1ihEPbR18ZUdaRDyPzuZxsBub0pBZSMAAr90DEJnmzegf4yPKbCFXarvMRkaLKEAUVZ5ag3syguXuuqqSLak2fYA2tB5G875PXjhSMyCZQwIWlnvnkz23R+vl0c7VFbHJnGFJNJd+DP0XRXZ5rVqZTMfOuv4rxtn7h29c9IOAyl7SRb1JCxh3snrq7joijUA7wVftR1d1D+EMCtPey4yg6mxU= jeronimo@jeronimo-hp
  
  # identificador da instância de base de dados
  # para evitar conflitos com possíveis instâncias existentes com o mesmo identificador
  ProjectDBInstanceIdentifier:
    Description: Database instance identifier, only for debugging.
    Type: String
    ConstraintDescription: Must not contain spaces.
    Default: project-mysql-db-instance

# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%% VARIÁVEIS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Mappings:

  # configurações de rede
  Network:
    VPC:
      Cidr: 10.0.0.0/16         # CIDR da VPC
    MainSubnet:
      Cidr: 10.0.0.0/24         # CIDR da sub-rede principal da VPC
    DatabaseRedundancySubnet:
      Cidr: 10.0.1.0/24         # CIDR da sub-rede de redundância da base de dados
  
  # configurações do wordpress
  Wordpress:
    Database:
      Name: wordpress         # nome da base de dados do wordpress
      Username: admin         # nome do usuário mestre
      Password: senha123      # senha do usuário mestre
    Site:
      Title: Projeto de Cloud # título do site
      Username: admin         # nome do usuário admin do site
      Password: senha123      # senha do usuário admin do site
      EMail: admin@admin.com  # email do usuário admin do site

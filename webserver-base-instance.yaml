# versão padrão dos templates CloudFormation
AWSTemplateFormatVersion: "2010-09-09"

# descrição da stack, para fins de documentação
Description: >
  Essa stack é usada para a criação da imagem base para o servidor web.
  Essa imagem será usada para definir o launch configuration do servidor
  para o auto scaling.

# parâmetros de criação da stack
Parameters:

  # chave pública para acesso SSH às instâncias
  KeyPairPublicKey:
    Description: A chave pública para acesso SSH às instâncias EC2.
    Type: String
    ConstraintDescription: Deve ser do tipo SSH RSA.
    Default: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzDZEYWYF/G7qHlgvj0OyTuX4vIn+7zoembaKryWM8wwwUxM5nfl5Ny/AqRp3IZb+Xe+vnrnBwfVSNo3igbpagF2Xq8SvGqltmroEy8J3M0xsTlAGjVGjpKv4Z13mUny+Uj2xK+Rs8mU25uFA0U44iWE+UsFAxbHtsTVyWaQxFZnjpCn0dIwPkyjJEZ2wVZJyF7P0WmSNR6yV0RQJmvBU1i/20DYQRSyc28fmeJRsQmAj5533hCEMw2d5mTG6Xr7xO68CIk1K0yoENO2VRpPfbW5f3QG6hSN1mbmUgjG1ihEPbR18ZUdaRDyPzuZxsBub0pBZSMAAr90DEJnmzegf4yPKbCFXarvMRkaLKEAUVZ5ag3syguXuuqqSLak2fYA2tB5G875PXjhSMyCZQwIWlnvnkz23R+vl0c7VFbHJnGFJNJd+DP0XRXZ5rVqZTMfOuv4rxtn7h29c9IOAyl7SRb1JCxh3snrq7joijUA7wVftR1d1D+EMCtPey4yg6mxU= jeronimo@jeronimo-hp

# recursos a serem criados
Resources:

  # %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  # %%%%%%%%%% CONFIGURAÇÕES DE REDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  # %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  # define a nuvem privada virtual
  ProjectVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: Project's VPC
  
  # define uma subrede dentro da VPC
  ProjectSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ProjectVPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: Project's Main Subnet

  # define o gateway de internet da VPC
  ProjectInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: Project's VPC Internet Gateway

  # conecta o gateway de internet definido acima ao VPC
  ProjectVCPGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref ProjectVPC
      InternetGatewayId: !Ref ProjectInternetGateway

  # route table da VPC, contém regras para transmissão de dados
  ProjectRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref ProjectVPC
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: Project's Route Table

  # route da VPC, é uma das regras contidas na route table (a única, neste caso)
  ProjectRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref ProjectRouteTable
      DestinationCidrBlock: '0.0.0.0/0'       # libera tráfego para qualquer lugar
      GatewayId: !Ref ProjectInternetGateway

  # associa a route table criada à subnet
  ProjectSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref ProjectSubnet
      RouteTableId: !Ref ProjectRouteTable

  # %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  # %%%%%%%%%% KEY PAIR E SECURITY GROUPS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  # %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  # define o keypair de acesso às instâncias EC2
  ProjectKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: admin-keypair
      PublicKeyMaterial: !Ref KeyPairPublicKey
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: Project's Overall Key Pair

  # security group para servidores web
  WebserverSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Wordpress server security group, enables HTTP and HTTPS.
      VpcId: !Ref ProjectVPC
      SecurityGroupIngress:
        - IpProtocol: tcp     # libera acesso HTTP
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp     # libera acesso HTTPS
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: Webserver Security Group

  # security group para acesso SSH
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH server security group, enables SSH only.
      VpcId: !Ref ProjectVPC
      SecurityGroupIngress:
        - IpProtocol: tcp     # libera acesso SSH
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:                   # tags para fácil identificação
        - Key: Name
          Value: SSH Security Group

  # %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  # %%%%%%%%%% INSTÂNCIA BASE E CRIAÇÃO DA IMAGEM WEBSERVER %%%%%%%%%%%%%%%%%%
  # %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  # instância EC2 na qual o webserver será instalado
  WebserverBaseInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro          # tamanho da instância
      ImageId: ami-04b70fa74e45c3917	# ubuntu 24.04 x86
      KeyName: !Ref ProjectKeyPair    # keypair configurado acima
      SubnetId: !Ref ProjectSubnet    # faz com que a instância use a subnet definida acima
      SecurityGroupIds:
        - !Ref WebserverSecurityGroup # acesso HTTP e HTTPS
        - !Ref SSHSecurityGroup       # acesso SSH
      Tags:                           # tags para fácil identificação
        - Key: Name
          Value: Webserver Base Instance

